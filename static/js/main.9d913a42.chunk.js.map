{"version":3,"sources":["components/NoteForm.js","components/Note.js","components/UpdateForm.js","components/App.js","index.js"],"names":["NoteForm","props","style","display","displayProp","className","onChange","handleChange","name","type","placeholder","id","onClick","handleSubmit","Note","postDate","date","year","getFullYear","month","getMonth","day","getDate","hrs","getHours","mins","getMinutes","secs","getSeconds","dateStr","title","content","postID","toggleEdit","handleDelete","UpdateForm","handleUpdate","App","state","noteObj","postCount","newFormOpen","updateFormOpen","currentEditPostID","bind","toggleForm","e","target","value","this","setState","preventDefault","formStatus","Date","newNoteObj","newEntry","noteTitle","noteContent","document","getElementById","key","currentNoteObj","postToEdit","btnClass","noteList","property","push","noteContainerDisplay","noteElements","map","note","sort","a","b","newFormDisplay","updateFormDisplay","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9d913a42.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles/noteform.css\";\r\n\r\nfunction NoteForm(props) {\r\n  return (\r\n    <form\r\n      // onSubmit={props.handleSubmit}\r\n      style={{ display: props.displayProp }}\r\n      className=\"note-form\"\r\n    >\r\n      <input\r\n        onChange={props.handleChange}\r\n        name=\"noteTitle\"\r\n        type=\"text\"\r\n        placeholder=\"Title (Optional)\"\r\n        className=\"input-title\"\r\n        id=\"form-title\"\r\n      ></input>\r\n      <textarea\r\n        onChange={props.handleChange}\r\n        name=\"noteContent\"\r\n        type=\"text\"\r\n        placeholder=\"Type something...\"\r\n        className=\"content-input\"\r\n        id=\"form-content\"\r\n      ></textarea>\r\n      <div className=\"input-btns\">\r\n        <button\r\n          onClick={props.handleSubmit}\r\n          name=\"cancelBtn\"\r\n          className=\"cancel-btn\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          onClick={props.handleSubmit}\r\n          name=\"saveBtn\"\r\n          className=\"save-btn\"\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NoteForm;\r\n","import React from \"react\";\r\nimport \"./styles/note.css\";\r\n\r\nfunction Note(props) {\r\n  let postDate = props.date;\r\n  let year = postDate.getFullYear();\r\n  let month = postDate.getMonth();\r\n  let day = postDate.getDate();\r\n  let hrs = postDate.getHours();\r\n  let mins = postDate.getMinutes();\r\n  let secs = postDate.getSeconds();\r\n  if (hrs < 10) {\r\n    hrs = `0${hrs}`;\r\n  }\r\n  if (mins < 10) {\r\n    mins = `0${mins}`;\r\n  }\r\n  if (secs < 10) {\r\n    secs = `0${secs}`;\r\n  }\r\n  let dateStr = `${year}/${month + 1}/${day} ${hrs}:${mins}:${secs}`;\r\n  return (\r\n    <div className=\"note\">\r\n      <p className=\"title\">{props.title ? props.title : null}</p>\r\n      <p className=\"date-posted\">{dateStr}</p>\r\n      <p className=\"content\">{props.content}</p>\r\n      <div className=\"note-btns\">\r\n        <button\r\n          className=\"edit-btn\"\r\n          id={props.postID}\r\n          onClick={props.toggleEdit}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button\r\n          className=\"delete-btn\"\r\n          id={props.postID}\r\n          onClick={props.handleDelete}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\nimport \"./styles/noteform.css\";\r\n\r\nfunction UpdateForm(props) {\r\n  return (\r\n    <form style={{ display: props.displayProp }} className=\"note-form\">\r\n      <input\r\n        onChange={props.handleChange}\r\n        name=\"noteTitle\"\r\n        type=\"text\"\r\n        placeholder=\"Title (Optional)\"\r\n        className=\"input-title\"\r\n        id=\"updateForm-title\"\r\n      ></input>\r\n      <textarea\r\n        onChange={props.handleChange}\r\n        name=\"noteContent\"\r\n        type=\"text\"\r\n        placeholder=\"Type something...\"\r\n        className=\"content-input\"\r\n        id=\"updateForm-content\"\r\n      ></textarea>\r\n      <div className=\"input-btns\">\r\n        <button\r\n          onClick={props.handleUpdate}\r\n          name=\"cancelBtn\"\r\n          className=\"cancel-btn\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          onClick={props.handleUpdate}\r\n          name=\"updateBtn\"\r\n          className=\"update-btn\"\r\n        >\r\n          Update\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default UpdateForm;\r\n","import React from \"react\";\nimport NoteForm from \"./NoteForm\";\nimport Note from \"./Note\";\nimport UpdateForm from \"./UpdateForm\";\nimport \"./styles/App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      noteObj: {},\n      postCount: 0,\n      newFormOpen: false,\n      updateFormOpen: false,\n      currentEditPostID: null,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n  handleChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    this.setState({\n      [name]: value,\n    });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    let name = e.target.name;\n    let formStatus = this.state.newFormOpen;\n    if (name === \"saveBtn\") {\n      let postDate = new Date();\n      let newNoteObj = this.state.noteObj;\n      let postID = this.state.postCount + 1;\n      let newEntry = {\n        postID: postID,\n        title: this.state.noteTitle ? this.state.noteTitle : null,\n        content: this.state.noteContent,\n        postDate: postDate,\n      };\n      newNoteObj[postID] = newEntry;\n      this.setState({\n        postCount: postID,\n        noteObj: newNoteObj,\n        newFormOpen: !formStatus,\n      });\n    } else {\n      this.setState({\n        newFormOpen: !formStatus,\n      });\n    }\n    let title = document.getElementById(\"form-title\");\n    let content = document.getElementById(\"form-content\");\n    title.value = \"\";\n    content.value = \"\";\n  }\n  handleDelete(e) {\n    let key = e.target.id;\n    let currentNoteObj = this.state.noteObj;\n    delete currentNoteObj[key];\n    this.setState({\n      noteObj: currentNoteObj,\n    });\n  }\n  handleUpdate(e) {\n    e.preventDefault();\n    let formStatus = this.state.updateFormOpen;\n    let currentNoteObj = this.state.noteObj;\n    let postToEdit = currentNoteObj[this.state.currentEditPostID];\n    let title = this.state.noteTitle ? this.state.noteTitle : null;\n    let content = this.state.noteContent;\n    let postDate = new Date();\n    postToEdit.title = title;\n    postToEdit.content = content;\n    postToEdit.postDate = postDate;\n    currentNoteObj[this.state.currentEditPostID] = postToEdit;\n    this.setState({\n      noteObj: currentNoteObj,\n      updateFormOpen: !formStatus,\n    });\n  }\n  toggleEdit(e) {\n    let postID = e.target.id;\n    this.toggleForm(e);\n    let title = document.getElementById(\"updateForm-title\");\n    let content = document.getElementById(\"updateForm-content\");\n    title.value = this.state.noteObj[postID].title;\n    content.value = this.state.noteObj[postID].content;\n    this.setState({\n      currentEditPostID: postID,\n    });\n  }\n  toggleForm(e) {\n    let btnClass = e.target.className;\n    if (btnClass === \"create-btn\") {\n      let formStatus = this.state.newFormOpen;\n      this.setState({\n        newFormOpen: !formStatus,\n      });\n    } else if (btnClass === \"edit-btn\") {\n      let formStatus = this.state.updateFormOpen;\n      this.setState({\n        updateFormOpen: !formStatus,\n      });\n    }\n  }\n  render() {\n    let noteList = [];\n    for (const property in this.state.noteObj) {\n      noteList.push(this.state.noteObj[property]);\n    }\n    const noteElements = noteList\n      .map((note) => {\n        return (\n          <div key={note.postID}>\n            <Note\n              postID={note.postID}\n              title={note.title}\n              content={note.content}\n              date={note.postDate}\n              handleDelete={this.handleDelete}\n              toggleEdit={this.toggleEdit}\n            />\n            <div className=\"note-border\"></div>\n          </div>\n        );\n      })\n      .sort((a, b) => b.key - a.key);\n    let newFormDisplay = this.state.newFormOpen ? \"flex\" : \"none\";\n    let updateFormDisplay = this.state.updateFormOpen ? \"flex\" : \"none\";\n    let noteContainerDisplay;\n    if (this.state.newFormOpen || this.state.updateFormOpen) {\n      noteContainerDisplay = \"none\";\n    } else {\n      noteContainerDisplay = \"block\";\n    }\n    return (\n      <div>\n        <div className=\"container\">\n          <NoteForm\n            displayProp={newFormDisplay}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n          />\n          <UpdateForm\n            displayProp={updateFormDisplay}\n            handleChange={this.handleChange}\n            handleUpdate={this.handleUpdate}\n          />\n          <div\n            className=\"notes-container\"\n            style={{ display: noteContainerDisplay }}\n          >\n            {noteElements}\n          </div>\n        </div>\n        <div className=\"footer\">\n          <button className=\"menu-btn\">Menu</button>\n          <h1 className=\"logo\">QuickNote</h1>\n          <button className=\"create-btn\" onClick={this.toggleForm}>\n            Create\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}